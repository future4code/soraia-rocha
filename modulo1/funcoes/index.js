/*
**Exerc√≠cios de interpreta√ß√£o de c√≥digo**

1.     
a) 
Apareceria os resultados: 10 e 50
        
b) 
Nada pois est√° fora do Escopo.
        
2.                  
a. 
Ela faz com que o texto do usu√°rio seja colocado em letras minusculas ap√≥s retornar.
Ao mesmo tempo que verifica se h√° os caracteres de cenoura no texto inserido pelo usu√°rio.

b. 
i. true
ii.True
iii.true
*/


/* **Exerc√≠cios de escrita de c√≥digo**

  1. 
    a) 
  
    informacoesSobreMim = ["Soraia", "31", "BH", "estudante"]
    function escreverInformacoesSobreMim(){
    cosnt informacoes = "Eu sou" + Soraia + "tenho" + 31 + "anos", "moro em " + BH + " e sou" + esudante
    console.log (informacoes)
    return informacoes
    }
      escreverInformacoesSobreMim(Soraia, 31, BH, estudante )

      console.log (informacoes)


    Troque o nome, idade, cidade e se √© estudante ou n√£o por informa√ß√µes sobre voc√™. 
    Lembrando que a fun√ß√£o n√£o possui entradas, apenas imprime essa mensagem.
    
    b)  Agora escreva uma fun√ß√£o que receba 4 par√¢metros que correspondem √†s informa√ß√µes de uma pessoa:
     o nome (`string`), a idade (`number`), a cidade (`string`) e uma profiss√£o (`string`). 
     Ela deve retornar uma `string` que unifique todas as informa√ß√µes da pessoa em uma s√≥ mensagem 
     com o template:
    
    ```
    Eu sou [NOME], tenho [IDADE] anos, moro em [ENDERE√áO] e sou [PROFISS√ÉO].
    ```
    
    - Exemplo
        
        Para a entrada:  `"La√≠s"`, `23`, `"S√£o Paulo"` e `"instrutora"`, deve retornar:
        
        `"Eu sou La√≠s, tenho 23 anos, moro em Rua Guarapari 190 e sou instrutora."`
        
    - üí°  Dica
        
        Na hora de criar a frase, voc√™ pode utilizar as template strings que vimos na aula anterior! 
        As vari√°veis da frase, nesse caso, ser√£o os pr√≥prios par√¢metros recebidos na fun√ß√£o
        
    
2. Escreva as fun√ß√µes explicadas abaixo:
    
    a) Escreva uma fun√ß√£o que receba 2 n√∫meros como par√¢metros, e, dentro da fun√ß√£o, 
    fa√ßa a soma das duas entradas e retorne o resultado. Invoque a fun√ß√£o e imprima no console o 
    resultado.
    
    b) Fa√ßa uma fun√ß√£o que recebe 2 n√∫meros e retorne um booleano que informa se o primeiro n√∫mero 
    √© **maior ou igual** ao segundo.
    
    c) Escreva uma fun√ß√£o que receba um n√∫mero e devolva um booleano indicando se ele √© par ou n√£o
    
    d) Fa√ßa uma fun√ß√£o que recebe uma mensagem (`string`) como par√¢metro e imprima o tamanho 
    dessa mensagem, juntamente com uma vers√£o dela em letras mai√∫sculas.
    
3. Crie uma fun√ß√£o para cada uma das opera√ß√µes b√°sicas (soma, subtra√ß√£o, multiplica√ß√£o e divis√£o). 
Em seguida, pe√ßa para o usu√°rio inserir dois n√∫meros e **chame** essas 4 fun√ß√µes com esses 
valores inputados pelo usu√°rio sendo o argumento. 
Por fim, mostre no console o resultado das opera√ß√µes:
    
    ```
    N√∫meros inseridos: 30 e 3
    Soma: 33
    Diferen√ßa: 27
    Multiplica√ß√£o: 90
    Divis√£o: 10
    ```
    
    - üí°  Dica
       